[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Final_Project.html",
    "href": "posts/Final_Project.html",
    "title": "Final_Project",
    "section": "",
    "text": "Motivation: I wish to dissect the Twitter discourse surrounding fast fashion to better understand the environmental, social, and cultural issues associated with the industry. Fast fashion is a complicated industry which exploits many aspects of human life. I am specifically interested in how it is entangled with environmentalism, socioeconomic inequality, consumerism, human rights, and fashion culture. My research questions focus on examining how people discuss fast fashion on Twitter through qualitative and quantitative research, such as: 1. What is the discourse surrounding the advocacy and criticism concerning fast fashion? 2. How do American attitudes towards culture, capitalism, and environmentalism influence attitudes towards practices of fast fashion production and consumption?\nDataset: In sourcing my dataset, I used snscrape in Python to scrape tweets from Twitter with the search term “fast fashion”.\n\nimport pandas as pd\nimport requests\nimport matplotlib.pyplot as plt\nimport nltk\n\nfrom nltk.tokenize import word_tokenize\nfrom nltk.sentiment import vader\nfrom nltk.corpus import stopwords\nfrom nltk.corpus import opinion_lexicon\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\n\nnltk.download('punkt')\nnltk.download('stopwords')\nnltk.download('vader_lexicon')\nnltk.download('opinion_lexicon')\n\n[nltk_data] Downloading package punkt to /Users/macbook/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n[nltk_data] Downloading package stopwords to\n[nltk_data]     /Users/macbook/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n[nltk_data] Downloading package vader_lexicon to\n[nltk_data]     /Users/macbook/nltk_data...\n[nltk_data]   Package vader_lexicon is already up-to-date!\n[nltk_data] Downloading package opinion_lexicon to\n[nltk_data]     /Users/macbook/nltk_data...\n[nltk_data]   Package opinion_lexicon is already up-to-date!\n\n\nTrue\n\n\nData Exploratory Analysis Section\n\nfashion = pd.read_csv(\"fastfashion_cleaned_subset.csv\")\nfashion.head()\n\n\n\n\n\n  \n    \n      \n      Unnamed: 0\n      X_type\n      url\n      date\n      rawContent\n      renderedContent\n      id\n      replyCount\n      retweetCount\n      likeCount\n      ...\n      source_device\n      sourceLabel\n      retweetedTweet\n      inReplyToTweetId\n      longitude\n      latitude\n      hashtags\n      cashtags\n      viewCount\n      vibe\n    \n  \n  \n    \n      0\n      1\n      snscrape.modules.twitter.Tweet\n      https://twitter.com/Alan_S_Morrison/status/162...\n      2023-02-03 20:31:01+00:00\n      The only reason I can think of for why people ...\n      The only reason I can think of for why people ...\n      1.621607e+18\n      0\n      0\n      0\n      ...\n      Android\n      Twitter for Android\n      NaN\n      NaN\n      NaN\n      NaN\n      ['CarColours']\n      NaN\n      49.0\n      NaN\n    \n    \n      1\n      2\n      snscrape.modules.twitter.Tweet\n      https://twitter.com/LiveSlowDyeFast/status/162...\n      2023-02-03 20:19:19+00:00\n      The early 2000s has to be the worst period in ...\n      The early 2000s has to be the worst period in ...\n      1.621604e+18\n      0\n      0\n      0\n      ...\n      iPhone\n      Twitter for iPhone\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      8.0\n      NaN\n    \n    \n      2\n      3\n      snscrape.modules.twitter.Tweet\n      https://twitter.com/FalkAppreciator/status/162...\n      2023-02-03 20:00:05+00:00\n      Deciding to become a Hypebeast. No thoughts. O...\n      Deciding to become a Hypebeast. No thoughts. O...\n      1.621599e+18\n      0\n      0\n      0\n      ...\n      iPhone\n      Twitter for iPhone\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      40.0\n      NaN\n    \n    \n      3\n      4\n      snscrape.modules.twitter.Tweet\n      https://twitter.com/otherlindseyy/status/16215...\n      2023-02-03 19:44:32+00:00\n      And as a plus size person, the only places we ...\n      And as a plus size person, the only places we ...\n      1.621596e+18\n      0\n      0\n      1\n      ...\n      Android\n      Twitter for Android\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      9.0\n      NaN\n    \n    \n      4\n      5\n      snscrape.modules.twitter.Tweet\n      https://twitter.com/Miao993306/status/16215919...\n      2023-02-03 19:30:25+00:00\n      The amount of people defending their over cons...\n      The amount of people defending their over cons...\n      1.621592e+18\n      0\n      0\n      0\n      ...\n      Twitter Web App\n      Twitter Web App\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      3.0\n      NaN\n    \n  \n\n5 rows × 25 columns\n\n\n\n\nfashion[\"source_device\"].value_counts()\n\ndevice = ['iPhone', 'Twitter Web App', 'Android', 'Post Studio', 'Hootsuite Inc.']\ncount_device = [1348, 715, 477, 256, 87]\ncolors = ['red', 'green', 'blue', 'orange', \"pink\"]\n\nplt.figure(figsize=(8, 6))\nplt.bar(device, count_device, color = colors)\nplt.ylabel('Counts')\nplt.title('Top Five Devices/Platform')\nplt.show()\n\n\n\n\n\ndate_simplified = []\nfor date in fashion[\"date\"]:\n    date_simplified.append(date[4:10])\nfashion[\"date_simplified\"] = date_simplified\n\ndate = fashion[\"date_simplified\"].unique()\ndate_1 = date[::-1]\ncounts = fashion[\"date_simplified\"].value_counts()\ncounts_1 = counts[::-1]\n\nfig, ax = plt.subplots(figsize=(16, 6))\nax.plot(date_1, counts_1)\nax.set_xlabel('Date')\nax.set_ylabel('Counts')\nax.set_title('Number of Tweets over time')\nplt.show()\n\n\n\n\n\ntweets_type = ['organic tweets', 'replies', 'retweets']\ntweets_type_counts = [12.08, 8.92, 79]\nplt.figure(figsize=(8, 6))\nplt.pie(tweets_type_counts, labels = tweets_type)\nplt.title('Tweet type distribution')\nplt.show()\n\n\n\n\n\nfashion[\"hashtags\"].value_counts()[0:5]\n\nhashtag_type = ['[fashion, women, men,...Valentine]', '[plussize, fashion, curves,...]', '[fashion, women, men,...Christmas]',\n               '[streetwear, fashion]',  '[fastfashion]']\nhashtag_type_counts = [85, 35, 22, 14, 13]\nplt.figure(figsize=(8, 6))\nplt.pie(hashtag_type_counts, labels = hashtag_type)\nplt.title('Tweet hashtag distribution')\nplt.show()\n\n\n\n\nAnalysis Section\n\nsentiment = []\nsentiment_type = []\nanalyzer = SentimentIntensityAnalyzer()\n\nfor text in fashion['rawContent']:\n    scores = analyzer.polarity_scores(text)\n    if scores['compound'] > 0.5:\n        sentiment_type.append(\"positive\")\n    elif scores['compound'] < -0.5:\n        sentiment_type.append(\"negative\")\n    else:\n        sentiment_type.append(\"neutral\")     \n    sentiment.append(scores['compound'])\nfashion['compound'] = sentiment\nfashion['sentiment'] = sentiment_type\n\n\nplt.figure(figsize=(8, 6))\nfashion['compound'].plot(kind = \"hist\")\nplt.xlabel('Compound')\nplt.ylabel('Counts')\nplt.title('Fast Fashion Tweets Compound Score')\nplt.show()\n\n\n\n\n\nfashion['sentiment'].value_counts()\n\nsentiment = ['Neutral', 'Positive', 'Negative']\nsentiment_count = [2265, 888, 519]\ncolors = ['orange', 'blue', \"pink\"]\n\nplt.figure(figsize=(8, 6))\nplt.bar(sentiment, sentiment_count, color = colors)\nplt.ylabel('Counts')\nplt.title('Tweet Sentiment Distribution')\nplt.show()\n\n\n\n\n\nplt.figure(figsize=(8, 6))\nplt.pie(sentiment_count, labels = sentiment)\nplt.title('Tweet Sentiment distribution')\nplt.show()\n\n\n\n\n\npositive_words = []\nnegative_words = []\nstop_words = stopwords.words('english')\n\nfor text in fashion['rawContent']:\n    for word in word_tokenize(text):\n        score = analyzer.polarity_scores(word)['compound']\n        if score > 0:\n            positive_words.append(word)\n        elif score < 0:\n            negative_words.append(word)\n\nfrom nltk import FreqDist\n\nnegative_words_nostop = [word for word in negative_words if word not in stop_words]\npositive_words_nostop = [word for word in positive_words if word not in stop_words]\n\nnegative_words_fd_nostop = FreqDist(negative_words_nostop)\npositive_words_fd_nostop = FreqDist(positive_words_nostop)\n\nmost_common_negative_nostop = negative_words_fd_nostop.most_common(15)\nmost_common_positive_nostop = positive_words_fd_nostop.most_common(15)\n\nfig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12,6))\n\nax2.barh([word for (word, count) in most_common_positive_nostop], [count for (word, count) in most_common_positive_nostop], color='pink')\nax2.set_title('15 Most Common Positive Words in Fast Fashion Tweet')\nax2.invert_yaxis()\n\nax1.barh([word for (word, count) in most_common_negative_nostop], [count for (word, count) in most_common_negative_nostop], color='blue')\nax1.set_title('15 Most Common Negative Words in Fast Fashion Tweet')\nax1.invert_yaxis()\n\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ZiqiBlog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 14, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFinal_Project\n\n\n\n\n\nDH140 Final Project\n\n\n\n\n\n\nMar 13, 2023\n\n\nZiqi Li\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 11, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]